%%%-----------------------------------------------------------------------------
%%% @doc EMAS simulation behaviour.
%%% @end
%%%-----------------------------------------------------------------------------

-module(emas_simulation).

-include_lib("emas.hrl").

-behaviour(mas_simulation).

%%% MAS simulation callbacks
-export([start/1,
         stop/1]).

%%%=============================================================================
%%% MAS simulation callbacks
%%%=============================================================================

%%------------------------------------------------------------------------------
%% @private
%%------------------------------------------------------------------------------
start(_SP) ->
    setup_exometer(),
    subscribe_metrics().

%%------------------------------------------------------------------------------
%% @private
%%------------------------------------------------------------------------------
stop(_SP) ->
    unsubscribe_metrics().

%%%=============================================================================
%%% Internal functions
%%%=============================================================================

%%------------------------------------------------------------------------------
%% @private
%%------------------------------------------------------------------------------
setup_exometer() ->
    exometer_admin:set_default(['_'], emas_fitness_entry_nif,
                              [{module, emas_fitness_entry_nif}]).

%%------------------------------------------------------------------------------
%% @private
%%------------------------------------------------------------------------------
subscribe_metrics() ->
    Metric = [global, fitness],
    mas_reporter:subscribe(Metric, emas_fitness_entry_nif, fitness).

%%------------------------------------------------------------------------------
%% @private
%%------------------------------------------------------------------------------
unsubscribe_metrics() ->
    Metric = [global, fitness],
    % mas_reporter:unsubscribe(Metric).
    exometer_report:unsubscribe_all(exometer_report_fs, Metric).
    % exometer:delete(Metric).
